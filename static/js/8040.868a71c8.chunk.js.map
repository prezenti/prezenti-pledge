{"version":3,"file":"static/js/8040.868a71c8.chunk.js","mappings":"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","sources":["../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/version.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/utils.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/base.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/encoding.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/data/isHex.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/data/size.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/data/trim.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/data.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/data/pad.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/encoding/toHex.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/encoding/toBytes.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/encoding/fromHex.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/formatters/formatter.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/address.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/lru.js","../node_modules/@web3-onboard/core/node_modules/@noble/hashes/esm/_assert.js","../node_modules/@web3-onboard/core/node_modules/@noble/hashes/esm/_u64.js","../node_modules/@web3-onboard/core/node_modules/@noble/hashes/esm/utils.js","../node_modules/@web3-onboard/core/node_modules/@noble/hashes/esm/sha3.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/hash/keccak256.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/address/getAddress.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/address/isAddress.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/data/concat.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/cursor.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/cursor.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/constants/unit.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/unit/formatUnits.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/unit/formatGwei.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/transaction.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/chain.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/errors/node.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/data/slice.js","../node_modules/@web3-onboard/core/node_modules/viem/_esm/utils/formatters/transactionRequest.js"],"sourcesContent":["export const version = '2.12.0';\n//# sourceMappingURL=version.js.map","import { version } from './version.js';\nexport const getContractAddress = (address) => address;\nexport const getUrl = (url) => url;\nexport const getVersion = () => `viem@${version}`;\n//# sourceMappingURL=utils.js.map","import { getVersion } from './utils.js';\nexport class BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        super();\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ViemError'\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getVersion()\n        });\n        const details = args.cause instanceof BaseError\n            ? args.cause.details\n            : args.cause?.message\n                ? args.cause.message\n                : args.details;\n        const docsPath = args.cause instanceof BaseError\n            ? args.cause.docsPath || args.docsPath\n            : args.docsPath;\n        this.message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsPath\n                ? [\n                    `Docs: https://viem.sh${docsPath}${args.docsSlug ? `#${args.docsSlug}` : ''}`,\n                ]\n                : []),\n            ...(details ? [`Details: ${details}`] : []),\n            `Version: ${this.version}`,\n        ].join('\\n');\n        if (args.cause)\n            this.cause = args.cause;\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err && typeof err === 'object' && 'cause' in err)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=base.js.map","import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntegerOutOfRangeError'\n        });\n    }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n    constructor(bytes) {\n        super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidBytesBooleanError'\n        });\n    }\n}\nexport class InvalidHexBooleanError extends BaseError {\n    constructor(hex) {\n        super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidHexBooleanError'\n        });\n    }\n}\nexport class InvalidHexValueError extends BaseError {\n    constructor(value) {\n        super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidHexValueError'\n        });\n    }\n}\nexport class SizeOverflowError extends BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SizeOverflowError'\n        });\n    }\n}\n//# sourceMappingURL=encoding.js.map","export function isHex(value, { strict = true } = {}) {\n    if (!value)\n        return false;\n    if (typeof value !== 'string')\n        return false;\n    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}\n//# sourceMappingURL=isHex.js.map","import { isHex } from './isHex.js';\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value) {\n    if (isHex(value, { strict: false }))\n        return Math.ceil((value.length - 2) / 2);\n    return value.length;\n}\n//# sourceMappingURL=size.js.map","export function trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n//# sourceMappingURL=trim.js.map","import { BaseError } from './base.js';\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \"${offset}\" is out-of-bounds (size: ${size}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SliceOffsetOutOfBoundsError'\n        });\n    }\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SizeExceedsPaddingSizeError'\n        });\n    }\n}\nexport class InvalidBytesLengthError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidBytesLengthError'\n        });\n    }\n}\n//# sourceMappingURL=data.js.map","import { SizeExceedsPaddingSizeError, } from '../../errors/data.js';\nexport function pad(hexOrBytes, { dir, size = 32 } = {}) {\n    if (typeof hexOrBytes === 'string')\n        return padHex(hexOrBytes, { dir, size });\n    return padBytes(hexOrBytes, { dir, size });\n}\nexport function padHex(hex_, { dir, size = 32 } = {}) {\n    if (size === null)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nexport function padBytes(bytes, { dir, size = 32 } = {}) {\n    if (size === null)\n        return bytes;\n    if (bytes.length > size)\n        throw new SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n//# sourceMappingURL=pad.js.map","import { IntegerOutOfRangeError, } from '../../errors/encoding.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToHex(value, opts);\n    if (typeof value === 'string') {\n        return stringToHex(value, opts);\n    }\n    if (typeof value === 'boolean')\n        return boolToHex(value, opts);\n    return bytesToHex(value, opts);\n}\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value, opts = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value, opts = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++) {\n        string += hexes[value[i]];\n    }\n    const hex = `0x${string}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { dir: 'right', size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(value_, opts = {}) {\n    const { signed, size } = opts;\n    const value = BigInt(value_);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value_ === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value > maxValue) || value < minValue) {\n        const suffix = typeof value_ === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value_}${suffix}`,\n        });\n    }\n    const hex = `0x${(signed && value < 0\n        ? (1n << BigInt(size * 8)) + BigInt(value)\n        : value).toString(16)}`;\n    if (size)\n        return pad(hex, { size });\n    return hex;\n}\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_, opts = {}) {\n    const value = encoder.encode(value_);\n    return bytesToHex(value, opts);\n}\n//# sourceMappingURL=toHex.js.map","import { BaseError } from '../../errors/base.js';\nimport { isHex } from '../data/isHex.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nimport { numberToHex, } from './toHex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToBytes(value, opts);\n    if (typeof value === 'boolean')\n        return boolToBytes(value, opts);\n    if (isHex(value))\n        return hexToBytes(value, opts);\n    return stringToBytes(value, opts);\n}\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value, opts = {}) {\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { size: opts.size });\n    }\n    return bytes;\n}\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = pad(hex, { dir: 'right', size: opts.size });\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value, opts) {\n    const hex = numberToHex(value, opts);\n    return hexToBytes(hex);\n}\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(value, opts = {}) {\n    const bytes = encoder.encode(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { dir: 'right', size: opts.size });\n    }\n    return bytes;\n}\n//# sourceMappingURL=toBytes.js.map","import { InvalidHexBooleanError, SizeOverflowError, } from '../../errors/encoding.js';\nimport { size as size_ } from '../data/size.js';\nimport { trim } from '../data/trim.js';\nimport { hexToBytes } from './toBytes.js';\nexport function assertSize(hexOrBytes, { size }) {\n    if (size_(hexOrBytes) > size)\n        throw new SizeOverflowError({\n            givenSize: size_(hexOrBytes),\n            maxSize: size,\n        });\n}\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return hexToNumber(hex, opts);\n    if (to === 'bigint')\n        return hexToBigInt(hex, opts);\n    if (to === 'string')\n        return hexToString(hex, opts);\n    if (to === 'boolean')\n        return hexToBool(hex, opts);\n    return hexToBytes(hex, opts);\n}\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = trim(hex);\n    }\n    if (trim(hex) === '0x00')\n        return false;\n    if (trim(hex) === '0x01')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex, opts = {}) {\n    let bytes = hexToBytes(hex);\n    if (opts.size) {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromHex.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize)\n            this.delete(this.keys().next().value);\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    if (isAddressCache.has(address))\n        return isAddressCache.get(address);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(address, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//# sourceMappingURL=transactionRequest.js.map"],"names":["getContractAddress","address","getUrl","url","BaseError","Error","constructor","shortMessage","args","arguments","length","undefined","super","Object","defineProperty","this","enumerable","configurable","writable","value","details","cause","message","docsPath","metaMessages","docsSlug","version","join","walk","fn","err","IntegerOutOfRangeError","_ref","max","min","signed","size","InvalidBytesBooleanError","bytes","SizeOverflowError","_ref2","givenSize","maxSize","isHex","strict","test","startsWith","Math","ceil","trim","hexOrBytes","dir","data","replace","sliceLength","i","toString","slice","SliceOffsetOutOfBoundsError","_ref3","offset","position","SizeExceedsPaddingSizeError","_ref4","targetSize","type","charAt","toUpperCase","toLowerCase","InvalidBytesLengthError","_ref5","pad","padHex","paddedBytes","Uint8Array","padEnd","padBytes","hex_","hex","hexes","Array","from","_v","padStart","toHex","opts","numberToHex","stringToHex","boolToHex","bytesToHex","Number","assertSize","string","value_","BigInt","maxValue","MAX_SAFE_INTEGER","minValue","suffix","encoder$1","TextEncoder","encode","encoder","toBytes$1","hexToBytes","numberToBytes","boolToBytes","stringToBytes","charCodeMap","zero","nine","A","F","a","f","charCodeToBase16","char","hexString","index","j","nibbleLeft","charCodeAt","nibbleRight","_ref6","size$1","hexToBigInt","hexToNumber","defineFormatter","format","_ref7","exclude","overrides","formatted","key","InvalidAddressError","_ref8","LruMap","Map","set","delete","keys","next","number","n","isSafeInteger","b","_len","lengths","_key","includes","exists","instance","checkFinished","destroyed","finished","output","out","outputLen","U32_MASK64","_32n","fromBig","h","l","split","lst","le","Ah","Uint32Array","Al","u8a","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","toBytes","str","utf8ToBytes","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","blockLen","create","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","push","t","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","enableXOF","rounds","pos","posOut","state","state32","floor","keccak","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","fill","keccakP","len","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","destroy","to","keccak_256","gen","keccak256","to_","checksumAddressCache","checksumAddress","address_","chainId","has","get","hexAddress","substring","hash","result","addressRegex","isAddressCache","isAddress","options","concat","values","concatHex","concatBytes","reduce","acc","NegativeOffsetError","_ref9","PositionOutOfBoundsError","_ref10","RecursiveReadLimitExceededError","_ref11","count","limit","staticCursor","dataView","ArrayBuffer","positionReadCount","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","etherUnits","gwei","wei","gweiUnits","ether","formatUnits","decimals","display","negative","integer","fraction","formatGwei","prettyPrint","entries","map","_ref12","filter","Boolean","maxLength","_ref13","_ref14","FeeConflictError","InvalidLegacyVError","_ref15","v","InvalidSerializableTransactionError","_ref16","transaction","InvalidStorageKeySizeError","_ref17","storageKey","ChainDoesNotSupportContract","_ref18","blockNumber","chain","contract","name","blockCreated","ClientChainNotConfiguredError","InvalidChainIdError","_ref19","ExecutionRevertedError","reason","FeeCapTooHighError","maxFeePerGas","FeeCapTooLowError","NonceTooHighError","nonce","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","gas","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","_ref20","TipAboveFeeCapError","maxPriorityFeePerGas","UnknownNodeError","_ref21","start","end","assertStartOffset","assertEndOffset","sliceHex","sliceBytes","rpcTransactionType","legacy","eip2930","eip1559","eip4844","formatTransactionRequest","request","rpcRequest","accessList","blobVersionedHashes","blobs","gasPrice","maxFeePerBlobGas","defineTransactionRequest"],"sourceRoot":""}