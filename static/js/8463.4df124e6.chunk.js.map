{"version":3,"file":"static/js/8463.4df124e6.chunk.js","mappings":"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","sources":["../node_modules/@web3-onboard/core/node_modules/svelte/animate/index.mjs","../node_modules/@web3-onboard/core/src/views/notify/ChainBadge.svelte","../node_modules/@web3-onboard/core/src/views/notify/StatusIconBadge.svelte","../node_modules/@web3-onboard/core/src/views/notify/Timer.svelte","../node_modules/@web3-onboard/core/src/views/notify/NotificationContent.svelte","../node_modules/@web3-onboard/core/src/replacement.ts","../node_modules/@web3-onboard/core/src/views/notify/Notification.svelte","../node_modules/@web3-onboard/core/src/icons/close-circle.ts","../node_modules/@web3-onboard/core/src/views/notify/Index.svelte"],"sourcesContent":["import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, { from, to }, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n        easing,\n        css: (t, u) => {\n            const x = u * dx;\n            const y = u * dy;\n            const sx = t + u * from.width / to.width;\n            const sy = t + u * from.height / to.height;\n            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n        }\n    };\n}\n\nexport { flip };\n","<script lang=\"ts\">\n  export let icon: string\n  export let borderColorVar: string\n  export let size: number\n  export let padding = 0\n  export let background = 'transparent'\n</script>\n\n<style>\n  div {\n    box-sizing: content-box;\n  }\n\n  .border {\n    border: 2px solid;\n    border-radius: 120px;\n    overflow: hidden;\n  }\n</style>\n\n<div\n  class=\"border\"\n  style={`\n    width: ${size - padding * 2}px; \n    height: ${size - padding * 2}px; \n    border-color: var(${borderColorVar}); \n    padding: ${padding}px; \n    background-color: ${background};\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n  `}\n>\n  {@html icon}\n</div>\n","<script lang=\"ts\">\n  import ChainBadge from './ChainBadge.svelte'\n  import {\n    defaultNotifyEventStyles,\n    unrecognizedChainStyle\n  } from '../../utils.js'\n  import type { Notification, ChainStyle } from '../../types.js'\n  export let chainStyles: ChainStyle = unrecognizedChainStyle\n  export let notification: Notification\n</script>\n\n<style>\n  div.notification-icons-wrapper {\n    height: 32px;\n    width: 32px;\n  }\n  .border {\n    border-radius: 8px;\n  }\n  div.notification-icon {\n    padding: 6px;\n  }\n\n  div.pending-icon {\n    animation: blink 2s ease-in infinite;\n    height: 100%;\n    width: 100%;\n    padding: 7px;\n  }\n  @keyframes blink {\n    from,\n    to {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.2;\n    }\n  }\n  div.border-action {\n    height: 32px;\n    min-width: 32px;\n    border-radius: 8px;\n    overflow: hidden;\n    will-change: transform;\n  }\n  div.border-action:before {\n    content: '';\n    background-image: conic-gradient(#b1b7f2 20deg, #6370e5 120deg);\n    height: 140%;\n    width: 140%;\n    position: absolute;\n    left: -25%;\n    top: -25%;\n    animation: rotate 2s infinite linear;\n  }\n\n  div.chain-icon-container {\n    left: 18px;\n    top: 18px;\n  }\n  @keyframes rotate {\n    100% {\n      transform: rotate(-360deg);\n    }\n  }\n</style>\n\n{#if notification.type}\n  <div class=\"relative\">\n    {#if notification.type === 'pending'}\n      <div class=\"border-action absolute\" />\n    {/if}\n\n    <div\n      class=\"flex items-center justify-center border relative notification-icons-wrapper\"\n      style={`background:${\n        defaultNotifyEventStyles[notification.type]['backgroundColor']\n      }; color: ${\n        defaultNotifyEventStyles[notification.type]['iconColor'] || ''\n      }; ${\n        notification.type === 'pending'\n          ? 'height: 28px; width: 28px; margin: 2px;'\n          : `border: 2px solid ${\n              defaultNotifyEventStyles[notification.type]['borderColor']\n            }`\n      }; `}\n    >\n      <div\n        class={`notification-icon flex items-center justify-center ${\n          notification.type === 'pending' ? 'pending-icon' : ''\n        }`}\n      >\n        {@html defaultNotifyEventStyles[notification.type]['eventIcon']}\n      </div>\n    </div>\n    {#if !notification.id.includes('customNotification') && !notification.id.includes('preflight')}\n      <div class=\"absolute chain-icon-container\">\n        <ChainBadge\n          icon={chainStyles.icon}\n          size={16}\n          background={chainStyles.color}\n          borderColorVar={`--notify-onboard-background, var(--onboard-gray-600, var(--gray-600))`}\n          padding={3}\n        />\n      </div>\n    {/if}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { _ as formatter, locale } from 'svelte-i18n'\n  import { onDestroy } from 'svelte'\n\n  export let startTime: number\n\n  function timeString(time: number): string {\n    const seconds = Math.floor(time / 1000)\n    const formattedSeconds = seconds < 0 ? 0 : seconds\n    return formattedSeconds >= 60\n      ? `${Math.floor(formattedSeconds / 60).toLocaleString(\n          $locale\n        )} ${$formatter('notify.time.minutes')}`\n      : `${formattedSeconds.toLocaleString($locale)} ${$formatter(\n          'notify.time.seconds'\n        )}`\n  }\n\n  let currentTime = Date.now()\n\n  const intervalId = setInterval(() => {\n    currentTime = Date.now()\n  }, 1000)\n\n  onDestroy(() => {\n    clearInterval(intervalId)\n  })\n</script>\n\n<style>\n  div {\n    display: flex;\n    justify-content: center;\n    font-size: inherit;\n    font-family: inherit;\n    margin: 0 1.5rem 0 0.75rem;\n  }\n\n  span {\n    font-family: inherit;\n    display: flex;\n    align-items: center;\n    margin: 0 2px;\n  }\n\n  .time {\n    color: var(\n      --notify-onboard-timer-color,\n      var(--onboard-gray-300, var(--gray-300))\n    );\n    margin-left: 4px;\n  }\n</style>\n\n<div class=\"time\">\n  {#if startTime}\n    -\n    <span>\n      {timeString(currentTime - startTime)}\n    </span>\n    ago\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import type { Notification } from '../../types.js'\n  import { shortenAddress } from '../../utils.js'\n  import { _ } from 'svelte-i18n'\n  import Timer from './Timer.svelte'\n\n  export let notification: Notification\n</script>\n\n<style>\n  div.notify-transaction-data {\n    font-size: var(\n      --notify-onboard-transaction-font-size,\n      var(--onboard-font-size-6, var(--font-size-6))\n    );\n    font-family: inherit;\n    margin: 0px 20px 0px 8px;\n    justify-content: center;\n  }\n\n  .hash-time {\n    display: inline-flex;\n    margin-top: 4px;\n    font-size: var(\n      --notify-onboard-hash-time-font-size,\n      var(--onboard-font-size-7, var(--font-size-7))\n    );\n    line-height: var(\n      --notify-onboard-hash-time-font-line-height,\n      var(--onboard-font-line-height-4, var(--font-line-height-4))\n    );\n  }\n\n  .address-hash {\n    color: var(\n      --notify-onboard-address-hash-color,\n      var(--onboard-primary-200, var(--primary-200))\n    );\n  }\n\n  a.address-hash {\n    color: var(\n      --notify-onboard-anchor-color,\n      var(--onboard-primary-400, var(--primary-400))\n    );\n  }\n\n  a {\n    display: flex;\n    text-decoration: none;\n    color: inherit;\n  }\n\n  .transaction-status {\n    color: var(--notify-onboard-transaction-status, inherit);\n    line-height: var(\n      --notify-onboard-font-size-5,\n      var(--onboard-font-size-5, var(--font-size-5))\n    );\n    font-weight: 400;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n</style>\n\n<div class=\"flex flex-column notify-transaction-data\">\n  <span class=\"transaction-status\">\n    {notification.message}\n  </span>\n\n  {#if notification.id && !notification.id.includes('customNotification') && !notification.id.includes('preflight')}\n    <span class=\"hash-time\">\n      {#if notification.link}\n        <a\n          class=\"address-hash\"\n          href={notification.link}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          {shortenAddress(notification.id)}\n        </a>\n      {:else}\n        <div class=\"address-hash\">\n          {shortenAddress(notification.id)}\n        </div>\n      {/if}\n      <Timer startTime={notification.startTime} />\n    </span>\n  {/if}\n</div>\n","import { bigIntToHex } from '@web3-onboard/common';\nimport { configuration } from './configuration.js';\nimport { state } from './store/index.js';\nimport { gweiToWeiHex, networkToChainId, toHexString } from './utils.js';\nconst ACTIONABLE_EVENT_CODES = ['txPool'];\nconst VALID_GAS_NETWORKS = ['main', 'matic-main'];\nconst WALLETS_SUPPORT_REPLACEMENT = [\n    'Ledger',\n    'Trezor',\n    'Keystone',\n    'KeepKey',\n    `D'CENT`\n];\nexport const actionableEventCode = (eventCode) => ACTIONABLE_EVENT_CODES.includes(eventCode);\nexport const validGasNetwork = (network) => VALID_GAS_NETWORKS.includes(network);\nexport const walletSupportsReplacement = (wallet) => wallet && WALLETS_SUPPORT_REPLACEMENT.includes(wallet.label);\nexport async function replaceTransaction({ type, wallet, transaction }) {\n    const { from, input, value, to, nonce, gas: gasLimit, network } = transaction;\n    const chainId = networkToChainId[network];\n    const { gasPriceProbability } = state.get().notify.replacement;\n    const { gas } = configuration;\n    if (!gas)\n        return;\n    // get gas price\n    const [gasResult] = await gas.get({\n        chains: [networkToChainId[network]],\n        endpoint: 'blockPrices'\n    });\n    const { maxFeePerGas, maxPriorityFeePerGas } = gasResult.blockPrices[0].estimatedPrices.find(({ confidence }) => confidence ===\n        (type === 'speedup'\n            ? gasPriceProbability === null || gasPriceProbability === void 0 ? void 0 : gasPriceProbability.speedup\n            : gasPriceProbability === null || gasPriceProbability === void 0 ? void 0 : gasPriceProbability.cancel)) || {};\n    if (!maxFeePerGas || !maxPriorityFeePerGas)\n        return;\n    const maxFeePerGasWeiHex = gweiToWeiHex(maxFeePerGas);\n    const maxPriorityFeePerGasWeiHex = gweiToWeiHex(maxPriorityFeePerGas);\n    // Some wallets do not like empty '0x' val\n    const dataObj = input === '0x' ? {} : { data: input };\n    return wallet.provider.request({\n        method: 'eth_sendTransaction',\n        params: [\n            Object.assign({ type: '0x2', from, to: type === 'cancel' ? from : to, chainId: parseInt(chainId), value: bigIntToHex(BigInt(value)), nonce: toHexString(nonce), gasLimit: toHexString(gasLimit), maxFeePerGas: maxFeePerGasWeiHex, maxPriorityFeePerGas: maxPriorityFeePerGasWeiHex }, dataObj)\n        ]\n    });\n}\n","<script lang=\"ts\">\n  import { onDestroy } from 'svelte'\n  import { _ } from 'svelte-i18n'\n  import StatusIconBadge from './StatusIconBadge.svelte'\n  import NotificationContent from './NotificationContent.svelte'\n  import type { Notification } from '../../types.js'\n  import closeIcon from '../../icons/close-circle.js'\n  import { configuration } from '../../configuration.js'\n  import { removeTransaction, transactions$, wallets$ } from '../../streams.js'\n  import { chainStyles, networkToChainId } from '../../utils.js'\n\n  import {\n    addCustomNotification,\n    removeNotification\n  } from '../../store/actions.js'\n\n  import {\n    actionableEventCode,\n    replaceTransaction,\n    validGasNetwork,\n    walletSupportsReplacement\n  } from '../../replacement.js'\n\n  const { device, gas } = configuration\n\n  export let notification: Notification\n  export let updateParentOnRemove: () => void\n\n  let timeoutId: NodeJS.Timeout\n  let hovered = false\n\n  // get transaction based on notification id\n  const transaction = transactions$\n    .getValue()\n    .find(({ hash }) => hash === notification.id)\n\n  // get wallet that sent transaction\n  const wallet =\n    transaction &&\n    $wallets$.find(\n      ({ accounts }) =>\n        !!accounts.find(\n          ({ address }) =>\n            address.toLowerCase() === transaction.from.toLowerCase()\n        )\n    )\n\n  $: if (notification.autoDismiss) {\n    timeoutId = setTimeout(() => {\n      removeNotification(notification.id)\n      removeTransaction(notification.id)\n    }, notification.autoDismiss)\n  }\n\n  function handleClick(e: MouseEvent) {\n    if (notification?.onClick) {\n      notification.onClick(e);\n    }\n  }\n\n  onDestroy(() => {\n    clearTimeout(timeoutId)\n  })\n</script>\n\n<style>\n  .bn-notify-notification {\n    --backround-color: var(--notify-onboard-background, var(--w3o-backround-color, var(--gray-700)));\n    --foreground-color: var(--w3o-foreground-color, var(--gray-600));\n    --text-color: var(--w3o-text-color, #FFF);\n    --border-color: var(--w3o-border-color);\n\n    font-family: inherit;\n    transition: background 300ms ease-in-out, color 300ms ease-in-out;\n    pointer-events: all;\n    backdrop-filter: blur(5px);\n    width: 100%;\n    min-height: 56px;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    overflow: hidden;\n    border: 1px solid transparent;\n    border-radius: var(\n      --notify-onboard-border-radius,\n      var(--onboard-border-radius-4, var(--border-radius-4))\n    );\n    background: var(--foreground-color);\n    color: var(--text-color);\n  }\n\n  .bn-notify-notification-inner {\n    padding: 0.75rem;\n  }\n\n  .bn-notify-notification:hover\n    > div.bn-notify-notification-inner\n    > div.notify-close-btn-desktop {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  div.notify-close-btn {\n    margin-left: auto;\n    margin-bottom: auto;\n    height: 24px;\n    width: 24px;\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    justify-content: center;\n    align-items: center;\n  }\n\n  div.notify-close-btn-desktop {\n    visibility: hidden;\n    transition: visibility 0.15s linear, opacity 0.15s linear;\n    opacity: 0;\n  }\n\n  .notify-close-btn .close-icon {\n    width: 20px;\n    margin: auto;\n    color: var(--text-color);\n  }\n\n  .notify-close-btn > .close-icon {\n    color: var(--notify-onboard-close-icon-color);\n  }\n\n  .notify-close-btn:hover > .close-icon {\n    color: var(--notify-onboard-close-icon-hover);\n  }\n\n  .transaction-status {\n    color: var(\n      --notify-onboard-transaction-status-color,\n      var(--onboard-primary-100, var(--primary-100))\n    );\n    line-height: 14px;\n  }\n\n  .dropdown {\n    height: 0px;\n    overflow: hidden;\n    transition: height 150ms ease-in-out;\n  }\n\n  .dropdown-visible {\n    height: 48px;\n  }\n\n  .dropdown-buttons {\n    background-color: var(\n      --notify-onboard-dropdown-background,\n      var(--onboard-gray-700, var(--gray-700))\n    );\n    width: 100%;\n    padding: 8px;\n  }\n\n  .dropdown-button {\n    padding: 4px 12px;\n    border-radius: var(\n      --notify-onboard-dropdown-border-radius,\n      var(--onboard-border-radius-5, var(--border-radius-5))\n    );\n    background-color: transparent;\n    font-size: var(\n      --notify-onboard-dropdown-font-size,\n      var(--onboard-font-size-6, var(--font-size-6))\n    );\n    color: var(\n      --notify-onboard-dropdown-text-color,\n      var(--onboard-primary-400, var(--primary-400))\n    );\n    transition: all 150ms ease-in-out;\n    cursor: pointer;\n  }\n\n  .dropdown-button:hover {\n    background: var(\n      --notify-onboard-dropdown-btn-hover-background,\n      rgba(146, 155, 237, 0.2)\n    );\n  }\n</style>\n\n<div\n  on:mouseenter={() => (hovered = true)}\n  on:mouseleave={() => (hovered = false)}\n  class:bn-notify-clickable={notification.onClick}\n  on:click={handleClick}\n  class=\"bn-notify-notification bn-notify-notification-{notification.type}}\"\n>\n  <div class=\"flex bn-notify-notification-inner\">\n    <StatusIconBadge\n      {notification}\n      chainStyles={chainStyles[networkToChainId[notification.network]]}\n    />\n    <NotificationContent {notification} />\n\n    <div\n      on:click|stopPropagation={() => {\n        removeNotification(notification.id)\n        removeTransaction(notification.id)\n        updateParentOnRemove()\n      }}\n      class=\"notify-close-btn notify-close-btn-{device.type} pointer flex\"\n    >\n      <div class=\"flex items-center close-icon\">\n        {@html closeIcon}\n      </div>\n    </div>\n  </div>\n\n  <!-- HOVER ACTION DROPDOWN -->\n  <div\n    class=\"dropdown\"\n    class:dropdown-visible={hovered &&\n      gas &&\n      actionableEventCode(notification.eventCode) &&\n      validGasNetwork(notification.network) &&\n      walletSupportsReplacement(wallet)}\n  >\n    {#if notification.eventCode === 'txPool'}\n      <div class=\"dropdown-buttons flex items-center justify-end\">\n        <button\n          on:click={async () => {\n            try {\n              await replaceTransaction({ type: 'cancel', wallet, transaction })\n            } catch (error) {\n              // we want a unique id so that the hint notification does not replace the pending notification, so it can't just be the hash\n              // but the id is displayed as a hash, so we need to insert the error in the middle\n              const id = `${transaction.hash.slice(\n                0,\n                9\n              )}:txReplaceError${transaction.hash.slice(-5)}`\n\n              addCustomNotification({\n                id,\n                type: 'hint',\n                eventCode: 'txError',\n                message: $_('notify.transaction.txReplaceError'),\n                key: id,\n                autoDismiss: 4000\n              })\n            }\n          }}\n          class=\"dropdown-button\">Cancel</button\n        >\n        <button\n          on:click={async () => {\n            try {\n              await replaceTransaction({\n                type: 'speedup',\n                wallet,\n                transaction\n              })\n            } catch (error) {\n              // we want a unique id so that the hint notification does not replace the pending notification, so it can't just be the hash\n              // but the id is displayed as a hash, so we need to insert the error in the middle\n              const id = `${transaction.hash.slice(\n                0,\n                9\n              )}:txReplaceError${transaction.hash.slice(-5)}`\n\n              addCustomNotification({\n                id,\n                type: 'hint',\n                eventCode: 'txError',\n                message: $_('notify.transaction.txReplaceError'),\n                key: id,\n                autoDismiss: 4000\n              })\n            }\n          }}\n          class=\"dropdown-button\">Speed-up</button\n        >\n      </div>\n    {/if}\n  </div>\n</div>\n","export default `\n<svg width=\"100%\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M10 0C4.47 0 0 4.47 0 10C0 15.53 4.47 20 10 20C15.53 20 20 15.53 20 10C20 4.47 15.53 0 10 0ZM15 13.59L13.59 15L10 11.41L6.41 15L5 13.59L8.59 10L5 6.41L6.41 5L10 8.59L13.59 5L15 6.41L11.41 10L15 13.59Z\" fill=\"currentColor\"/>\n</svg>\n`;\n","<script lang=\"ts\">\n  import { _ } from 'svelte-i18n'\n  import { flip } from 'svelte/animate'\n  import { fade, fly } from 'svelte/transition'\n  import { cubicOut } from 'svelte/easing'\n  import { state } from '../../store/index.js'\n  import { shareReplay, startWith } from 'rxjs/operators'\n  import Notification from './Notification.svelte'\n  import { configuration } from '../../configuration.js'\n  import type { Notification as NotificationType } from '../../types.js'\n\n  const { device } = configuration\n\n  const accountCenter$ = state\n    .select('accountCenter')\n    .pipe(startWith(state.get().accountCenter), shareReplay(1))\n\n  export let position: string\n  export let sharedContainer: boolean\n  export let notifications: NotificationType[]\n\n  let x: number\n  let y: number\n\n  function elasticOut(t: number): number {\n    return (\n      Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -35.0 * t) +\n      1.0\n    )\n  }\n\n  $: if (position.includes('top')) {\n    y = -50\n  } else {\n    y = 50\n  }\n\n  x = 0\n  y = 0\n\n  let overflowY = 'y-scroll'\n  const updateScrollYOnRemove = (): void => {\n    if (overflowY !== 'y-visible') {\n      overflowY = 'y-visible'\n    }\n    delay(function () {\n      overflowY = 'y-scroll'\n    }, 1000)\n  }\n\n  const delay = (function () {\n    let timer: null | ReturnType<typeof setTimeout> = null\n    return (callback: () => void, ms: number) => {\n      clearTimeout(timer)\n      timer = setTimeout(callback, ms)\n    }\n  })()\n</script>\n\n<style>\n  ul {\n    padding-left: 0;\n    display: flex;\n    flex-flow: column nowrap;\n    font-size: var(\n      --notify-onboard-font-size,\n      var(--onboard-font-size-5, var(--font-size-5))\n    );\n    list-style-type: none;\n    overflow: visible;\n    scrollbar-width: none;\n    box-sizing: border-box;\n    z-index: var(--notify-onboard-z-index, 300);\n    font-family: var(\n      --notify-onboard-font-family,\n      var(--onboard-font-family-normal, inherit)\n    );\n    margin: 8px 0;\n    pointer-events: all;\n  }\n\n  .y-scroll {\n    overflow-y: scroll;\n  }\n  .y-visible {\n    overflow-y: visible;\n  }\n\n  li.notification-list-top:not(:first-child) {\n    margin-top: 8px;\n  }\n\n  li.notification-list-bottom:not(:first-child) {\n    margin-bottom: 8px;\n  }\n\n  ul.bn-notify-bottomLeft,\n  ul.bn-notify-bottomRight {\n    flex-direction: column-reverse;\n  }\n\n  @media only screen and (max-width: 450px) {\n    ul {\n      width: 100%;\n    }\n  }\n\n  :global(.bn-notify-clickable:hover) {\n    cursor: pointer;\n  }\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n</style>\n\n{#if notifications.length}\n  <ul\n    class=\"bn-notify-{position} {overflowY}\"\n    style={`${\n      position.includes('top') ? 'justify-content:flex-start;' : ''\n    }; max-height: calc(100vh - ${\n      $accountCenter$.expanded\n        ? '412px'\n        : sharedContainer && device.type !== 'mobile'\n        ? '82px'\n        : !sharedContainer && device.type === 'mobile'\n        ? '108px'\n        : '24px'\n    })`}\n  >\n    {#each notifications as notification (notification.key)}\n      <li\n        animate:flip={{ duration: 500 }}\n        on:click|stopPropagation\n        in:fly|local={{ duration: 1200, delay: 300, x, y, easing: elasticOut }}\n        out:fade={{ duration: 300, easing: cubicOut }}\n        class={`bn-notify-li-${position} ${\n          position.includes('top')\n            ? 'notification-list-top'\n            : 'notification-list-bottom'\n        }`}\n      >\n        <Notification\n          {notification}\n          updateParentOnRemove={updateScrollYOnRemove}\n        />\n      </li>\n    {/each}\n  </ul>\n{/if}\n"],"names":["flip","node","_ref","from","to","params","arguments","length","undefined","style","getComputedStyle","transform","ox","oy","transformOrigin","split","map","parseFloat","dx","left","width","dy","top","height","delay","duration","d","Math","sqrt","easing","cubicOut","is_function","css","t","u","x","y","sx","sy","ctx","insert","target","div","anchor","icon","$$props","borderColorVar","size","padding","background","raw_value","defaultNotifyEventStyles","type","show_if","id","includes","create_if_block_2","div2","append","div1","div0","current","dirty","innerHTML","color","chainbadge_changes","if_block","create_if_block$4","chainStyles","unrecognizedChainStyle","notification","span","set_data","t1","t1_value","create_if_block$3","startTime","currentTime","Date","now","intervalId","setInterval","onDestroy","clearInterval","time","seconds","floor","formattedSeconds","toLocaleString","$locale","$formatter","link","create_if_block_1","timer_changes","shortenAddress","t_value","attr","a","a_href_value","t0_value","message","t0","ACTIONABLE_EVENT_CODES","VALID_GAS_NETWORKS","WALLETS_SUPPORT_REPLACEMENT","actionableEventCode","eventCode","validGasNetwork","network","walletSupportsReplacement","wallet","label","async","replaceTransaction","_ref6","transaction","input","value","nonce","gas","gasLimit","chainId","networkToChainId","gasPriceProbability","state","get","notify","replacement","configuration","gasResult","chains","endpoint","maxFeePerGas","maxPriorityFeePerGas","blockPrices","estimatedPrices","find","_ref7","confidence","speedup","cancel","maxFeePerGasWeiHex","gweiToWeiHex","maxPriorityFeePerGasWeiHex","dataObj","data","provider","request","method","Object","assign","parseInt","bigIntToHex","BigInt","toHexString","button0","button1","create_if_block$1","toggle_class","div3","div4","div4_class_value","onClick","statusiconbadge_changes","device","timeoutId","updateParentOnRemove","hovered","transactions$","getValue","_ref9","hash","$wallets$","_ref10","accounts","_ref11","address","toLowerCase","clearTimeout","autoDismiss","setTimeout","removeNotification","removeTransaction","e","error","slice","addCustomNotification","$_","key","mouseenter_handler","$$invalidate","mouseleave_handler","get_key","i","ul","ul_class_value","expanded","li","li_class_value","null_to_empty","stop_animation","create_animation","rect","elasticOut","li_outro","create_out_transition","fade","create_if_block","sin","PI","pow","accountCenter$","select","pipe","startWith","accountCenter","shareReplay","position","sharedContainer","notifications","overflowY","timer","callback","ms","updateScrollYOnRemove"],"sourceRoot":""}